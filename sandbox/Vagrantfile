# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = '2'

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  project_name = '' # TODO: set your project name

  custom_log = ENV['CUSTOM_VAGRANT_LOG'].to_i == 1

  # Using 32bit OS because VirtualBox doesn't support nested VT-x virtualization.
  # OSX Host -> Windows Guest(64bit) -> CentOS Guest(32bit)
  #
  # https://www.virtualbox.org/ticket/4032
  # http://heroween.hateblo.jp/entry/2014/05/28/125451
  config.vm.box = 'chef/centos-6.5-i386'

  # DHCP or Private IP
  ip_conf = File.join(File.dirname(__FILE__), 'config/vagrant_ip.conf')
  private_net = File.exist?(ip_conf) ? File.read(ip_conf).split[0] : nil
  if private_net && private_net =~ /([\d\.]{7,15})/
    config.vm.network :private_network, ip: Regexp.last_match[1]
  else
    config.vm.network :private_network, type: 'dhcp'
  end

  # Proxy
  if Vagrant.has_plugin?("vagrant-proxyconf")
    puts "vagrant-proxyconf plugin exists. searching config/vagrant_proxy.{conf,bat}" if custom_log
    proxy_conf_sh   = File.join(File.dirname(__FILE__), 'config/vagrant_proxy.conf')
    proxy_conf_bat  = File.join(File.dirname(__FILE__), 'config/vagrant_proxy.bat')
    proxy_conf = nil

    if File.exist?(proxy_conf_sh)
      proxy_conf = proxy_conf_sh
    elsif File.exist?(proxy_conf_bat)
      proxy_conf = proxy_conf_bat
    end

    if proxy_conf
      puts "Loading: #{ proxy_conf }" if custom_log
      File.read(proxy_conf).scan(/^(?:set|export)\s+(\w+)\s*=\s*["']?([^'"\r\n]+)/) do |k, v|
        if k == 'http_proxy'
          puts "HTTP Proxy: #{ v }" if custom_log
          config.proxy.http = v
          config.yum_proxy.http  = v
        elsif k == 'https_proxy'
          puts "HTTPS Proxy: #{ v }" if custom_log
          config.proxy.https = v
        elsif k == 'no_proxy'
          puts "NO Proxy: #{ v }" if custom_log
          config.proxy.no_proxy = v
        end
      end
    else
      puts "config/vagrant_proxy.{conf,bat} doesn't exist." if custom_log
      config.proxy.http = ''
      config.yum_proxy.http = ''
      config.proxy.https = ''
      config.proxy.no_proxy = ''
    end
  end

  config.vm.synced_folder '..', '/vagrant'

  config.vm.provider :virtualbox do |vb|
    vb.name = "#{ project_name }_sandbox" unless project_name.empty?
    vb.customize ['modifyvm', :id, '--memory', '1024']
    # vb.gui = true
  end

  config.vm.network :forwarded_port, id: 'ssh', guest: 22, host: 2222
  config.vm.network :forwarded_port, id: 'http', guest: 8080, host: 8080

  config.vm.provision :shell, :path => 'bin/provision.sh'
end
